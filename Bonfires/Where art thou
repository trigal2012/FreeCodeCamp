/*Make a function that looks through an array of objects (first argument) and returns 
an array of all objects that have matching property and value pairs (second argument). 
Each property and value pair of the source object has to be present in the object from 
the collection if it is to be included in the returned array.*/

/*For example, if the first argument is 
[{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, 
{ first: "Tybalt", last: "Capulet" }], and the second argument is { last: "Capulet" }, 
then you must return the third object from the array (the first argument), 
because it contains the property and it's value, that was passed on as the second argument.*/


function where(z,a){
  
  var arrTemp = [];
  var x = [];
  var y = [];

  for(var propertyName in a){
    x.push(propertyName);
    y.push(a[propertyName]);
  }
  
  //determine if the input object 'z' has a matching property/value
  for(var j = 0; j<z.length; j++){
      var match = [];
      for(var i = 0; i< Object.keys(z[j]).length; i++){          
        
        if(z[j].hasOwnProperty(x[i]) && z[j][x[i]] === y[i]){
          match.push(j);
          if(match.length === x.length){
            arrTemp.push(z[j]);
            match = [];
          }
        } 

      }  
  }
  console.log(arrTemp);
  return arrTemp;
}

where([{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, { first: "Tybalt", last: "Capulet" }], { last: "Capulet" });

where([{ "a": 1, "b":2 }, { "a": 1, "b":3 }, { "a": 1, "b": 2 }], { "a": 1, "b":2 });

where([{ "a": 1, "b": 2 }, { "a": 1 }, { "a": 1, "b": 2, "c": 2 }], { "a": 1, "b": 2 });

where([{ "a": 1, "b": 2 }, { "a": 1 }, { "a": 1, "b": 2, "c": 2 }], { "a": 1, "c": 2 });
